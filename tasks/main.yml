- name: Install PyMySQL 
  pip:
    name: PyMySQL 

- import_tasks: RedHat.yml
  when: ansible_os_family == 'RedHat'

- import_tasks: Debian.yml
  when: ansible_os_family == 'Debian' 


- name: Change MariaDB root user password 
  mysql_user: 
    login_user: root
    login_password: ""
    login_unix_socket: /data/mysql/mysqld.sock
    name: root 
    host: '{{item}}'
    password: "{{mariadb_root_password}}"
  with_items: 
    - 127.0.0.1
    - ::1
    - localhost
  ignore_errors: yes

- name: Removes all anyelse user accounts
  mysql_user:
    login_user: root
    login_password: "{{mariadb_root_password}}"
    login_unix_socket: /data/mysql/mysqld.sock
    name: ''
    host_all: yes
    state: absent

- name: Remove hostname user accounts
  mysql_user: 
    login_user: root 
    login_password: "{{mariadb_root_password}}"
    login_unix_socket: /data/mysql/mysqld.sock
    name: 'root' 
    host: "{{ ansible_nodename }}"
    state: absent

- name: Removes test Databases 
  mysql_db:
    login_user: root
    login_password: "{{mariadb_root_password}}"
    name: test
    state: absent

- name: Change MySQL configuration default
  lineinfile:
    dest: /etc/my.cnf
    regexp: '^{{ item.name }} = *'
    insertafter: '\[mysqld\]'
    firstmatch: yes
    line: "{{ item.name }} = {{item.value}}"
  with_items: "{{ mysql_configuration_default }}"
  when: mysql_configuration_default is defined and mysql_configuration_default != none
  
- name: Removing privileges on test database
  command: mysql -uroot -p{{mariadb_root_password}} -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'" -S /data/mysql/mysqld.sock

- name: Create MySQL extra databases 
  mysql_db:
    login_user: root
    login_password: '{{mariadb_root_password}}'
    login_unix_socket: /data/mysql/mysqld.sock
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default('utf8mb4',true) }}"
    state: "{{ item.state | default('present',true) }}"
  with_items: "{{ mariadb_databases }}"
  when: (mariadb_databases is defined) and (mariadb_databases != none)

- name: Create extra Databases User
  mysql_user:
    login_user: root
    login_password: '{{mariadb_root_password}}'
    login_unix_socket: /data/mysql/mysqld.sock
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost',true) }}"
    password: "{{ item.password | default('123456',true) }}"
    priv: "{{ item.priv | default('*.*:USAGE',true) }}"
  with_items: "{{ mariadb_users }}"
  when: (mariadb_users is defined) and (mariadb_users != none)

# display version and service state of components
- name: Get MariaDB version
  shell: sudo sh -c "mysql -V 1>> /data/logs/install_version.txt"

#Enable remote connection
- import_tasks: remote.yml
  when: mariadb_remote
